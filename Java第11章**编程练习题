//**11.8 新的Account类

public class Transaction {
	private java.util.Date date;
    private char type;;
    private double amount;
    private double balance;
    private String description;

    public Transaction(char type, double amount, double balance, String description) {
        date = new java.util.Date();
        this.type = type;
        this.amount = amount;
        this.balance = balance;
        this.description = description;
    }

    public void setType(char type) {
        this.type = type;
    }

    public char getType() {
        return type;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public double getAmount() {
        return amount;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public double getBalance() {
        return balance;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }
}

public class NewAccount {
	private int id;
    private double balance;
    private double annualInterestRate;
    private java.util.Date date;
    private String name;
    private java.util.ArrayList<Transaction> record = new java.util.ArrayList<>();

    public NewAccount() {
        date = new java.util.Date();
    }

    public NewAccount(int id, double balance) {
        this.id = id;
        this.balance = balance;
    }

    public NewAccount(String name, int id, double balance) {
        this.name = name;
        this.id = id;
        this.balance = balance;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getId() {
        return id;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public double getBalance() {
        return balance;
    }

    public void setAnnualInterestRate(double annualInterestRate) {
        this.annualInterestRate = annualInterestRate;
    }

    public double getAnnualInterestRate() {
        return annualInterestRate;
    }

    public double getMontylyInterestRate() {
        return annualInterestRate / 12;
    }

    public java.util.ArrayList<Transaction> getRecord() {
        return record;
    }

    public void withdraw(double amount) {
        balance = balance - amount;
        String description = "取款: " + amount + "\t剩余：" + balance;
        record.add(new Transaction('W', amount, balance, description));
    }

    public void deposit(double amount) {
        balance = balance + amount;
        String description = "存款：" + amount + "\t剩余：" + balance;
        record.add(new Transaction('D', amount, balance, description));
    }
}

import java.util.Scanner;  
import java.util.ArrayList;  

public class TestNewAccount {
	public static void main(String[] args) {
		NewAccount person1 = new NewAccount("George", 1122, 1000);
        person1.setAnnualInterestRate(1.5);
        person1.withdraw(30);
        person1.withdraw(40);
        person1.withdraw(50);
        person1.deposit(5);
        person1.deposit(4);
        person1.deposit(2);

        ArrayList<Transaction> person1Record = person1.getRecord();

        System.out.println("Name: " + person1.getName() + "\nAnnual Interest Rate: " 
            + person1.getAnnualInterestRate() + "\nBalance: " + person1.getBalance());
        System.out.println("\n交易记录：");
        for (Transaction description : person1Record)
            System.out.println(description.getDescription());
	}	
}

//**11.16 加法测试
import java.util.Scanner;  
import java.util.ArrayList;  

public class Test {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
        int number1 = (int)(Math.random() * 9 + 1);
        int number2 = (int)(Math.random() * 9 + 1);

        System.out.print("What is " + number1 + " + " + number2 + "? ");
        int answer = input.nextInt();
        ArrayList<Integer> answerList = new ArrayList<>();
        while (answer != (number1 + number2)) {
            if (answerList.contains(answer))
                System.out.println("You already enter " + answer);
            else
                answerList.add(answer);

            System.out.print("Wrong answer. Try again. What is " +
                number1 + " + " + number2 + "? "); 
            answer = input.nextInt();
        }

        System.out.println("You got it!");
	}	
}

//**11.17 代数：完全平方
import java.util.Scanner; 
import java.util.Arrays;
import java.util.ArrayList;  
import java.util.Collections;

public class Test {
	public static void main(String[] args) {
		 Scanner input = new Scanner(System.in);
	        System.out.print("Enter an integer m: ");
	        int m = input.nextInt();
	        int n = findN(m);
	        System.out.println("The smallest number n for m * n to be a perfect sqare is " + n);
	        System.out.println("m * n is " + (m * n));
	}
	
	public static int findN(int m) {
        ArrayList<Integer> list = new ArrayList<>();
        int temp = m;

        while (temp != 1) {
            for (int i = 2; i <= temp; i++) {
                if (temp % i == 0) {  // 找到所有的因子
                    temp /= i;
                    list.add(i);
                    break;
                }
            }
        }

        // 找到最大值创建数组，统计因子出现次数
        int max = Collections.max(list);
        int[] count = new int[max + 1];
        for (int number : list)
            count[number]++;
        int n = 1;
        for (int i = 0; i < max + 1; i++) 
            if (count[i] % 2 == 1) 
                n *= i;
        return n;
    }
}
