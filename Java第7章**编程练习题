//**7.3 计算数字的出现次数
import java.util.Scanner;  
import java.util.Arrays;

public class Test {
	/** Main method */
	public static void main(String[] args) {
		final int inf = 101;    
		System.out.print("Enter the integers between 1 and 100: ");
		Scanner input = new Scanner(System.in);    	
		int[] num = new int[100];    	
		int count = 0;    	
		while(true){    		
			int temp = input.nextInt();    		
			if(temp == 0)    			
				break;
			num[count] = temp;    		
			++count;    	
		}    	
		Arrays.sort(num,0,count);    	
		int time = 0;    	
		for(int i = 0; i < count; ++i){    		
			if(num[i] != inf){    			
				time = 0;	    		
				for(int j = 0; j < count; ++j){	    			
					if(num[i] == num[j]){	    				
						++time;	    				
						if(i != j)	    					
							num[j] = inf;	    			
					}	    		
				}	    		
				System.out.println(num[i] + " occurs " + time + (time > 1 ? " times" : " time"));	    	
			}    	
		}
	}
}

//**7.5 打印不同的数
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		int[] nums = new int[100];		
		System.out.print("Enter ten numbers: ");		
		Scanner cin = new Scanner(System.in);		
		for(int i = 0; i < 10; ++i){			
			int n = cin.nextInt();			
			++nums[n];		
		}				
		System.out.print("The number of distinct number is ");		
		int count = 0;		
		for(int i = 0; i < 100; ++i)			
			if(nums[i] != 0)				
				++count;		
		System.out.println(count);
		System.out.print("The distinct numbers are: ");
		for(int i = 0; i < 100; ++i){			
			if(nums[i] != 0)				
				System.out.print(i + " ");		
		}
	}
}

//**7.17 对学生排序
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);
		System.out.print("请输入学生个数：");
		int n = cin.nextInt();		
		String[] names = new String[n];		
		double[] grades = new double[n];
		System.out.println("请输入学生姓名和成绩：");
		for(int i = 0; i < n; ++i){			
			names[i] = cin.next();			
			grades[i] = cin.nextDouble();		
		}				
		for(int i = 0; i < n-1; ++i){			
			for(int j = i+1; j < n; ++j){				
				if(grades[i] < grades[j]){					
					double temp = grades[i];					
					grades[i] = grades[j];					
					grades[j] = temp;										
					String tmp = names[i];					
					names[i] = names[j];					
					names[j] = tmp;				
				}			
			}		
		}				
		for(int i = 0; i < n; ++i){			
			System.out.println(names[i] + "    " + grades[i]);		
		}	
	}
}

//**7.18 冒泡排序
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);		
		int n = cin.nextInt();		
		double[] nums = new double[n];				
		for(int i = 0; i < n; ++i){			
			nums[i] = cin.nextDouble();		
		}				
		for(int i = 0; i < n-1; ++i){			
			for(int j = 0; j < n-1; ++j){				
				if(nums[j] > nums[j+1]){					
					double temp = nums[j];					
					nums[j] = nums[j+1];					
					nums[j+1] = temp;				
				}			
			}		
		}				
		for(int i = 0; i < n; ++i){			
			System.out.println(nums[i]);		
		}	
	}
}

//**7.19 是否排好序了
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);		
		System.out.print("Enter list: ");		
		int n = cin.nextInt();		
		int[] nums = new int[n];		
		for(int i = 0; i < n; ++i)			
			nums[i] = cin.nextInt();				
		for(int i = 1; i < n; ++i){			
			if(nums[i] < nums[i-1]){				
				System.out.println("The list is not sorted");				
				return ;			
			}		
		}		
		System.out.println("The list is already sorted");	
	}
}

//**7.23 游戏：储物柜难题
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		boolean[] box = new boolean[101];		
		int flag = 0;		
		for(int i = 1; i <= 100; ++i){			
			if(i == 1)			
				for(int j = 1; j <= 100; ++j)					
					box[j] = !box[j];						
			else if(i == 2)				
				for(int j = i; j <= 100; j += 2)					
					box[j] = !box[j];							
			else				
				for(int j = i; j <= 100; j += i)					
					box[j] = !box[j];						
		}	
		System.out.println("以下柜子是开的：");
		for(int j = 1; j <= 100; ++j)			
			if(box[j])				
				System.out.println(j);			
	}
}

//**7.24 仿真：优惠券收集人问题
import java.util.Scanner; 

public class Test {
	public static void main(String[] args) {
		boolean[] huase = new boolean[4];   //存放每种花色的抽取情况 
        boolean flag = false;
        int count = 0;
        //因为并不知道要抽多少次，所以要放在一个无限循环中 
        while(flag == false){       
            if(huase[0]&&huase[1]&&huase[2]&&huase[3])  //若四种花色都出现过 
                flag = true;
            else{
                switch(choosePai(huase)){
                    case "Spades":
                        huase[0] = true;
                        break;
                    case "Hearts":
                        huase[1] = true;
                        break;
                    case "Diammonds":
                        huase[2] = true;
                        break;
                    case "Clubs":
                        huase[3] = true;
                        break;
                }
            }
            count++;
        }
        System.out.println("Number of picks:"+count); 
    }
    
    public static String choosePai(boolean[] huase){
        int[] deck = new int[52];   //用来存放52张牌 
        String[] Huases = {"Spades","Hearts","Diamonds","Clubs"};
        String[] ranks = {"Ace","2","3","4","5","6","7","8","9","10","Jack","Queen","King"};
        
        //首先初始化牌组
        for(int i = 0;i < deck.length;i++){
            deck[i] = i;
        } 
        
        //进行洗牌
        for(int i = 0;i < deck.length;i++){
            int Index = (int)(Math.random()*deck.length);
            int temp = deck[i];
            deck[i] = deck[Index];
            deck[Index] = temp;
        }
        
        //从52张牌中任选一张进行抽牌
        int i = (int)(Math.random()*deck.length);
        String Huase = Huases[deck[i] / 13];
        String rank = ranks[deck[i]%13];
        switch(Huase){
        case "Spades":  
            if(!huase[0])  
                {System.out.println(rank+" of "+Huase);huase[0] = true;}  
            break;  
        case "Hearts":  
            if(!huase[1])  
                {System.out.println(rank+" of "+Huase);huase[1] = true;}  
            break;  
        case "Diamonds":  
            if(!huase[2])  
                {System.out.println(rank+" of "+Huase);huase[2] = true;}  
            break;  
        case "Clubs":  
            if(!huase[3])  
                {System.out.println(rank+" of "+Huase);huase[3] = true;}  
            break;  
        } 
        return Huase;
    }
}

//**7.31 合并两个有序列表
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);
		System.out.print("Enter list1: ");
		Integer m = cin.nextInt();
		int[] arr1 = new int[m];
		for(int i = 0; i < m; ++i)			
			arr1[i] = cin.nextInt();	
		System.out.print("Enter list2: ");
		Integer n = cin.nextInt();
		int[] arr2 = new int[n];						
		for(int i = 0; i < n; ++i)			
			arr2[i] = cin.nextInt();				
		int[] result = merge(arr1, arr2);	
		System.out.print("The merged list is ");
		for(int i = 0; i < result.length; ++i)		
			if(result[i] != 0)			
				for(int j = 0; j < result[i]; ++j)					
					System.out.print(i + " ");							
	}
	
	public static int[] merge(int[] list1, int[] list2){		
		int max = 0;		
		for(int i = 0; i < list1.length; ++i)		
			if(list1[i] > max)				
				max = list1[i];						
		for(int i = 0; i < list2.length; ++i)			
			if(list2[i] > max)				
				max = list2[i];						
		int[] array = new int[max+1];				
		for(int i = 0; i < list1.length; ++i)			
			++array[list1[i]];				
		for(int i = 0; i < list2.length; ++i)			
			++array[list2[i]];				
		return array;	
	}
}

//**7.32 划分列表
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		System.out.print("Enter list: ");
		Scanner cin = new Scanner(System.in);
		Integer n = cin.nextInt();
		int[] nums = new int[n];		
		for(int i = 0; i < n; ++i)			
			nums[i] = cin.nextInt();			
		int num = partition(nums);		
		System.out.print("After the partition, the list is ");
		for(int i = 0; i < n; ++i)			
			System.out.print(nums[i] + " ");
	}
	
	public static int partition(int[] list){		
		int temp = 0;		
		int j = 0;		
		for(int i = 1; i < list.length; ++i){			
			if(list[i] <= list[j]){				
				temp = list[i];				
				list[i] = list[j];				
				list[j] = temp;								
				temp = list[j+1];				
				list[j+1] = list[i];				
				list[i] = temp;								
				++j;			
			}		
		}		
		return j;	
	}
}

//**7.34 对字符串中的字符排序
import java.util.Scanner;  

public class Test {
	/** Main method */
	public static void main(String[] args) {
		System.out.print("请输入一个字符串：");
		Scanner cin = new Scanner(System.in);
		String str = cin.nextLine();
		str = sort(str);
		System.out.print("排序后的字符串为：");
		System.out.println(str);
	}
	
	public static String sort(String s){		
		char[] chs = s.toCharArray();		
		java.util.Arrays.sort(chs);		
		String result = String.valueOf(chs);		
		return result;	
	}
}
