//**9.9
public class RegularPolygon {

			public static void main(String[] args) {
				// TODO Auto-generated method stub
				naiguan kk = new naiguan(6,4);
				System.out.println("周长是：" + kk.getPerimeter());
				System.out.println("面积是：" + kk.getArea());
				naiguan ll = new naiguan(10,4,5.6,7.8);	
				System.out.println("周长是：" + ll.getPerimeter());
				System.out.println("面积是：" + ll.getArea());
				naiguan jj = new naiguan();
				System.out.println("周长是：" + jj.getPerimeter());
				System.out.println("面积是：" + jj.getArea());
			}	
	}
public class naiguan {
		private int n;//边数
		private double side;
		private double x;	
		private double y;
public naiguan()
{
	this.n = 3;
	this.side = 1;
	this.x = 0;
	this.y = 0;
	}
public naiguan(int n,double side)
{
	this.n = n;
	this.side = side;
}
public naiguan(int n,double side,double x,double y)
{
	this.n = n;
	this.side = side;
	this.x = x;
	this.y = y;
	}
public int getn()
{
	return this.n;
}
public double getside()
{
	return this.side;
}
public double getx()
{
	return this.x;
}

public double gety()
{
	return this.y;
}
public double getPerimeter()
{
	return this.n * this.side;
}
public double getArea()
{
	return (this.n * this.side * this.side) / (4 * Math.tan(Math.PI/this.n));
}
}

//**9.12
public class LinearEquation {
	private double x1, y1, x2, y2, x3, y3, x4, y4;
	
	public LinearEquation(double newx1, double newy1, double newx2, double newy2, double newx3, double newy3, double newx4, double newy4){
		x1 = newx1;
		y1 = newy1;
		x2 = newx2;
		y2 = newy2;
		x3 = newx3;
		y3 = newy3;
		x4 = newx4;
		y4 = newy4;
	}
	
	public double getCPx(){
		return ((x4-x3)*((y1-y2)*x1-(x1-x2)*y1)+(x1-x2)*((y3-y4)*x3-(x3-x4)*y3))/((y1-y2)*(x4-x3)+(y3-y4)*(x1-x2));
	}
	
	public double getCPy(){
		return ((y1-y2)*((y3-y4)*x3-(x3-x4)*y3)+(y4-y3)*((y1-y2)*x1-(x1-x2)*y1))/((y1-y2)*(x4-x3)+(y3-y4)*(x1-x2));
	}
}

import java.util.Scanner;
public class CrossPoint {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		
		System.out.println("请输入第一条线段的两端点(x1, y1),(x2, y2): ");
		double x1 = input.nextDouble();
		double y1 = input.nextDouble();
		double x2 = input.nextDouble();
		double y2 = input.nextDouble();
		System.out.println("请输入第二条线段的两端点(x3, y3),(x4, y4): ");
		double x3 = input.nextDouble();
		double y3 = input.nextDouble();
		double x4 = input.nextDouble();
		double y4 = input.nextDouble();
		
		LinearEquation twolines = new LinearEquation(x1, y1, x2, y2, x3, y3, x4, y4);
		String x = String.format("%.2f", twolines.getCPx());
		String y = String.format("%.2f", twolines.getCPy());
		System.out.println("两线段的交点为: (" + x + ", " + y + ")");
	}

}


public class RegularPolygon {
	private int n;
	private double side;
	private double x;
	private double y;
	
	public RegularPolygon(){
		this.n = 3;
		this.side = 1;
		this.x = 0;
		this.y = 0;
	}
	
	public RegularPolygon(int newn, double newside){
		n = newn;
		side = newside;
		this.x = 0;
		this.y = 0;
	}
	
	public RegularPolygon(double newx, double newy){
		this.n = 3;
		this.side = 1;
		x = newx;
		y = newy;
	}
	
	public int getN(){
		return n;
	}
	
	public double getSide(){
		return side;
	}
	
	public double getX(){
		return x;
	}
	
	public double getY(){
		return y;
	}
	
	public void setN(int newn){
		n = newn;
	}
	
	public void setSide(double newside){
		side = newside;
	}
	
	public void setX(double newx){
		x = newx;
	}
	
	public void setY(double newy){
		y = newy;
	}
}

//**9.13
//Great a Scanner
		 Scanner input = new Scanner(System.in);
		 //Enter array value;
		int row,column;
		System.out.print("Enter the number of rows and columns in the array:");
		row = input.nextInt();
		column = input.nextInt();
		double [][] m = new double[row][column];
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				m[i][j] = input.nextDouble();
			}
			//System.out.printf("\n");
		}
		//Found the maxNumber;
		double maxValue = m[0][0];
		int g=0,h=0;
		
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				if(m[i][j]>maxValue)
				{
					maxValue = m[i][j];
					g=i;
					h=j;
				}
			}
		}
		System.out.println("Maxvalue is " + maxValue + " at(" + g + " " + h + ")");
	}

}
public class LinearEquartion {
		int a,b,c,d,e,f;
		LinearEquartion(int a,int b,int c,int d,int e,int f){
			this.a = a;
			this.b = b;
			this.c = c;
			this.d = d;
			this.e = e;
			this.f = f;
		}
		int getA() {
			return a;
		}
		int getB() {
			return b;
		}
		int getC() {
			return c;
		}
		int getD() {
			return d;
		}
		int getE() {
			return e;
		}
		int getF() {
			return f;
		}
		boolean isSolvablee() {
			return a * d - b * c != 0 ? true:false;
		}
		int getX(){
			return (e * d - b * f) / (a * d - b * c);
		}
		int getY(){
			return (a * f - e * c) / (a * d - b * c);
		}	
	
}
9.12
import java.util.Scanner;
public class Location {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Great a Scanner
		 Scanner input = new Scanner(System.in);
		 //Enter array value;
		int row,column;
		System.out.print("Enter the number of rows and columns in the array:");
		row = input.nextInt();
		column = input.nextInt();
		double [][] m = new double[row][column];
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				m[i][j] = input.nextDouble();
			}
			//System.out.printf("\n");
		}
		//Found the maxNumber;
		double maxValue = m[0][0];
		int g=0,h=0;
		
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				if(m[i][j]>maxValue)
				{
					maxValue = m[i][j];
					g=i;
					h=j;
				}
			}
		}
		System.out.println("Maxvalue is " + maxValue + " at(" + g + " " + h + ")");
	}
}
