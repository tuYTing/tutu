#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char s1[1000];
char s2[1000];
typedef struct TreeNode {
	char data;
	struct TreeNode *leftchild, *rightchild;
}TreeNode, *ptr;
void CreateTree(int a1, int b1, int a2, int b2) {  // 根据中序和层次遍历建二叉树
	ptr bt;
	bt = (ptr)malloc(sizeof(TreeNode));
	int i, j;
	for (i = a2; i <= b2; i++) {
		int flag = 0;
		for (j = a1; j <= b1; j++) {
			if (s2[i] == s1[j]) {    // 输出根节点
				bt->data = s2[i];
				printf("%c", bt->data);
				flag = 1;
				break;
			}
		}
		if (flag)
			break;
	}
	if(j > a1)  // 遍历左子树
        CreateTree(a1,j-1,0,b2); 
    if(j < b1)  // 遍历右子树 
        CreateTree(j+1,b1,0,b2);
}
int main() {
	scanf("%s", &s1);
	scanf("%s", &s2);
	CreateTree(0, strlen(s1) - 1, 0, strlen(s2));
	return 0;
}

